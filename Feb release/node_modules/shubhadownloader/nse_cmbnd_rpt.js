/********************************
	<Shubha Downloader, It downloads end of day pricing data from publicly available sites and converts it different formats....>
    Copyright (C) 2013 Shubhalabha.in

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>
***********************************/

function process_nse_cmbnd_rpt(count,n,baseurl,downloadpath,unzippath,outputpath)
{
outputpath=outputpath.replace(/std_csv/g,'reports');
var mon=count[n].split('-')[0];
var m1=count[n].split('-')[1];
var d=count[n].split('-')[2];
var yy=count[n].split('-')[3];
var y=yy.substr(2,2);
var fs = require('fs');
    var csv = require('ya-csv');
    var async = require('async');

        try{

           async.parallel({
               data1 : function(callback){
                    if (fs.existsSync(unzippath+'combined_report'+d+m1+yy+'.xls')) {
                        fs.readFile(unzippath+'combined_report'+d+m1+yy+'.xls','utf-8', function(err, data){
						if(err){document.getElementById("om").innerHTML+="<br/><font color='red'>An error occured while reading combined_report"+d+m1+yy+".xls</font>";}
                        console.log('\n Reading pd.csv');
                        callback(err, data);
                    });
                    }else
                    {
                        // Here readdir's functionaliity has no use. It is written for only to send
                        // '0' data in its callback function because we cannot call "callback(err, data);"
                        // function out side a callback function
                        fs.readdir(downloadpath, function(err, files){
						if(err){document.getElementById("om").innerHTML+="<br/>"+err;}
                            callback(err,'0');
                        });
                    }
               }
        }, function(err, result){

            if(err){document.getElementById("om").innerHTML+="<br/>"+err;}
       if (fs.existsSync(unzippath+'combined_report'+d+m1+yy+'.xls')) {
            var arrRow = new Array();
            arrRow = result['data1'].split('\n');

            var arrFileData = new Array();

            // arrRow.lenght-3 is for last 3 lines of no use in file
            for(var i=0 ; i<arrRow.length;i++)
            {
                    var tempArr = arrRow[i].split(',');
                    arrFileData.push(tempArr);
            }

			var filename = outputpath+'NSE_combined_report.xls';

            //check for the avaliability of file (existence)....

                if (fs.existsSync(filename))
                {
                  //processing actual data of file ...


			for(i=1; i<arrFileData.length;i++)
                        {
                        fs.appendFileSync(filename, arrFileData[i]+'\n','UTF-8', function (err) {
                        if(err){document.getElementById("om").innerHTML+="<br/>"+err;}
                        //		console.log(arrFileData[i][3]+'\n');
                        });

                        }

                 }
                 else
                 {
                 //var header='Bhavcopy Date,Segment,ISIN,Instrument,Symbol,Series,Reverse Leg Date,Security Name,Security Status,Face Value,Lot Size,Expiry Date,Strike Price,Option Type,Previous Close Price,Open Price,High Price,Low Price,Closing Price,Last Traded Price,Settlement Price,Number of Trades,Qty / Contracts Traded,Value (In Lacs),Open Interest,Change In Open Interest,52 Week High Price,52 Week High Price Date,52 Week Low Price,52 Week Low Price Date,Corporate Action Indicator,Record Date,Book Closure Start Date,Book Closure End Date,No delivery start date,No delivery end date,Ex Date,Corporate action remarks,Interest payment date,Maturity Date,Annualised Yield,Transaction Value (in lacs),Bloomberg Code';
                //appending headers to file here
                fs.writeFile(filename, result['data1'], function (err)
                {
                if(err){document.getElementById("om").innerHTML+="<br/>"+err;}
                //processing actual data of file ...
                
                /*
			for(i=0; i<arrFileData.length;i++)
                        {
                        fs.appendFileSync(filename, arrFileData[i]+'\n','UTF-8', function (err) {
                        if (err) throw err;
                        //		console.log(arrFileData[i][3]+'\n');
                        });
                
                        }*/
                 });
                }

   }
});

    }catch(err){
        if(err){document.getElementById("om").innerHTML+="<br/>"+err;}
    }
document.getElementById("om").innerHTML+="<br/>combined_report"+d+m1+yy+".xls is processed..";
    n++;
        if(count.length>n)
        {setTimeout(function (){process_nse_cmbnd_rpt(count,n,baseurl,downloadpath,unzippath,outputpath)}, 5000);
    document.getElementById("om").innerHTML+='..';}
    else{
    $("#p3").hide();
    document.getElementById("om").innerHTML+='<br/><font color=green>All Finished..</font>';
    //process_nsefuture(count,0,baseurl,downloadpath,unzippath,outputpath);
    //process_nse_bc(count,count.length-1,baseurl,downloadpath,unzippath,outputpath);
    }
	}
function monthDiff(d1, d2) {
    var months;
    months = (d2.getFullYear() - d1.getFullYear()) * 12;
    months -= d1.getMonth() + 1;
    months += d2.getMonth();
   return months+1;
   
   
}


// return numeric month for symbolic month arg




