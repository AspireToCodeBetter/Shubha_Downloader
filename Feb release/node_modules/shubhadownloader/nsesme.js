/********************************
	<Shubha Downloader, It downloads end of day pricing data from publicly available sites and converts it different formats....>
    Copyright (C) 2013 Shubhalabha.in

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>
***********************************/
function process_nsesme(count,n,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn)
{
    try{
        var mon=count[n].split('-')[0];
        var m1=count[n].split('-')[1];
        var d=count[n].split('-')[2];
        var yy=count[n].split('-')[3];
        var y=yy.substr(2,2);
        var fs = require('fs');
        var csv = require('ya-csv');
        var async = require('async');



        async.parallel({
            data1 : function(callback){
                if (fs.existsSync(unzippath+'sme'+d+m1+y+'.csv')) {
                    Ext.getCmp('pbar3').updateText('Processing sme'+d+m1+y+'.csv');
                    fs.readFile(unzippath+'sme'+d+m1+y+'.csv','utf-8', function(err, data){
                        if(err)
                        {
                            document.getElementById("om").innerHTML+="<br/>An error occured while reading "+unzippath+"sme"+d+m1+y+".csv";
                        }
                        callback(err, data);
                    });
                }else
                {
                    // Here readdir's functionaliity has no use. It is written for only to send
                    // '0' data in its callback function because we cannot call "callback(err, data);"
                    // function out side a callback function
                    fs.readdir(downloadpath, function(err, files){
                        if(err)
                        {
                            document.getElementById("om").innerHTML+="<br/>An error occured while reading "+unzippath+"sme"+d+m1+y+".csv";
                        }

                        callback(err,'0');
                    });
                }
            }
        }, function(err, result){
            if(err)
            {
                document.getElementById("om").innerHTML+="<br/>An error occured while processing "+unzippath+"sme"+d+m1+y+".csv";
            }

            if (fs.existsSync(unzippath+'sme'+d+m1+y+'.csv')) {
                Ext.getCmp('pbar3').updateText('Processing sme'+d+m1+y+'.csv');
                var arrRow = new Array();
                arrRow = result['data1'].split('\n');

                var arrFileData = new Array();

                // arrRow.lenght-3 is for last 3 lines of no use in file
                for(var i=0 ; i<arrRow.length;i++)
                {
                    var tempArr = arrRow[i].split(',');
                    arrFileData.push(tempArr);
                }

                var filename = outputpath+'NSE_SME_sme'+d+m1+y+'.csv';
                var header='TICKER,NAME,DATE,OPEN,HIGH,LOW,CLOSE,VOLUME,OPENINT';
                //appending header to file here
                if(!fs.existsSync(filename)){
                    fs.writeFile(filename, header+'\n', function (err)
                    {
                        if(err)
                        {
                            document.getElementById("om").innerHTML+="<br/>An error occured while processing "+unzippath+"sme"+d+m1+y+".csv";
                        }
                        //processing actual file data here
                        var date = yy+m1+d;
                        for(i=1 ; i<arrFileData.length;i++)
                        {
                            if(arrFileData[i][2]==" "|| typeof arrFileData[i][2]=="undefined")
                            {
                                break;
                            }
                            else
                            {
                                fs.appendFileSync(filename, arrFileData[i][2]+','+arrFileData[i][3]+','+date+','+arrFileData[i][5]+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][10]+','+'0'+'\n','UTF-8', function (err) {
                                    if(err)
                                    {
                                        document.getElementById("om").innerHTML+="<br/>An error occured while processing "+unzippath+"sme"+d+m1+y+".csv";
                                    }
                                //console.log('sme processsed!');
                                });
                            }
                        }
                    });
                }

            }
        });

    
	
						
        //Ext.getCmp('pbar3').updateText('Processing sme'+d+m1+y+'.csv completed');
			
        document.getElementById("om").innerHTML+="<br/>sme"+d+m1+y+".csv is processed..";
        addlog(logpath, 'co'+d+m1+yy+'.csv is processed..');
        n++;
        if(count.length>n)
        {
            loadprogressbar();
            setTimeout(function (){
                process_nsesme(count,n,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn)
                }, 1000);
            document.getElementById("om").innerHTML+='..';
        }
        else{
            loadprogressbar();
            /************/
            visit('nsesme.html');
            /***************/
            sn++;
            callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);

        }
	
    }catch(err)
    {
        document.getElementById("om").innerHTML+="<br/>An error occured while processing "+unzippath+"sme"+d+m1+y+".csv";
        n++;
        if(count.length>n)
        {
            loadprogressbar();
            setTimeout(function (){
                process_nsesme(count,n,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn)
                }, 1000);
            document.getElementById("om").innerHTML+='..';
        }
        else
        {
            loadprogressbar();
            /************/
            visit('nsesme.html');
            /***************/
            sn++;
            callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);

        }
		
    }
    }

function monthDiff(d1, d2) {
    try
    {
        var months;
        months = (d2.getFullYear() - d1.getFullYear()) * 12;
        months -= d1.getMonth() + 1;
        months += d2.getMonth();
        return months+1;
    }catch(err)
    {
        console.log(err);
    }
}


// return numeric month for symbolic month arg




