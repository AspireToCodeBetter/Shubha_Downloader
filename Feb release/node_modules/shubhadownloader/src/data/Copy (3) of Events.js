
Ext.Loader.setConfig({
    enabled: true
});
Ext.Loader.setPath('Ext.ux', 'ux');

Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.util.*',
    'Ext.state.*',
    'Ext.form.*',
    'Ext.ux.CheckColumn'
]);

try
	{
		var async = require('async');
		var fs = require('fs');
        async.parallel
		({
               data1 : function(callback){
                    if (fs.existsSync('BM.csv')) {
						
                        fs.readFile('BM.csv','utf-8', function(err, data){
						if(err){console.log(err)}
                        
                        callback(err, data);
						});
                    }else
                    {
                        // Here readdir's functionaliity has no use. It is written for only to send
                        // '0' data in its callback function because we cannot call "callback(err, data);"
                        // function out side a callback function
                        fs.readdir('c:/data', function(err, files){
						if(err){console.log(err)}
                            callback(err,'0');
                        });
                    }
               }
        }, function(err, result)
		{
			if(err)console.log(err);
			if (fs.existsSync('BM.csv')) 
			{
					var arrRow = new Array();
					var arrRow = result['data1'].split('\n');
					
					
					var arrFileData = new Array();

				
					for(var i=0 ; i<arrRow.length;i++)
					{
							var tempArr = arrRow[i].split(',');
							arrFileData.push(tempArr);
					}
					
					
					Ext.define('Ext.calendar.data.Events', {

					statics: 
					{
						getData: function() 
						{
							var today = Ext.Date.clearTime(new Date()), 
								makeDate = function(d, h, m, s) {
									d = d * 86400;
									h = (h || 0) * 3600;
									m = (m || 0) * 60;
									s = (s || 0);
									return Ext.Date.add(today, Ext.Date.SECOND, d + h + m + s);
								};
				
								var M = Ext.calendar.data.EventMappings;
								var arrRec = new Array();
								for(var i=1 ; i<arrFileData.length-1;i++)
								{
								var rec = new Ext.calendar.data.EventModel();
								//var rec2 = new Ext.calendar.data.EventModel();
								rec.data[M.Title.name] = 'My cool event';
								/*rec.data[M.EventId.name] = '5550';
								rec.data[M.CalendarId.name] = '19';*/
								rec.data[M.StartDate.name] = new Date();
								rec.data[M.EndDate.name] = new Date();
								rec.data[M.Notes.name] = 'Some notes';
								arrRec.push(rec);
								}
								/*rec2.data[M.EventId.name] = '1012';
								rec2.data[M.CalendarId.name] = '10';*/
								/*rec2.data[M.StartDate.name] = new Date('2013-02-05 12:00:00');
								rec2.data[M.EndDate.name] = new Date('2013-02-05 12:00:00');
								rec2.data[M.Title.name] = 'World';
								rec2.data[M.Notes.name] = 'Some notes';
								
								arrRec.push(rec2);
								/*var M = Ext.calendar.data.EventMappings;
								for(var i=1 ; i<arrFileData.length-1;i++)
								{
								
									var evtFinalDate = "";
									if(arrFileData[i][4] != null && arrFileData[i][4] != "" && typeof arrFileData[i][4] != 'undefined')	
									{	
										var arrTempDate = arrFileData[i][4].toString().split('-');
										var evtDate = arrTempDate[0].toString().replace("\"", "");
										var evtMonth = getMonth(arrTempDate[1].toString());
										var evtYear = arrTempDate[2].toString().replace("\"", "");
										evtFinalDate = evtYear+'-'+evtMonth+'-'+evtDate;
								
									}
									
									var rec = Ext.calendar.data.EventModel();
									
									/*rec.data[M.EventId.name] = i+1020;
									rec.data[M.CalendarId.name] = i+20;*/
									/*rec.data[M.StartDate.name] = new Date(); //new Date('\''+evtFinalDate+'\'');
									rec.data[M.EndDate.name] =  new Date(); //new Date('\''+evtFinalDate+'\'');
									rec.data[M.Title.name] = 'Company Name';
									rec.data[M.Notes.name] = '';
									arrRec.push(rec);
								}*/
								//console.log('len : '+arrFileData.length);
								function getMonth(mon){
             var month='';
             switch(mon)
            {
                case 'Jan':
                    month='01';
                    break;
                case 'Feb':
                    month='02';
                    break;
                case 'Mar':
                    month='03';
                    break;
                case 'Apr':
                    month='04';
                    break;
                case 'May':
                    month='05';
                    break;
                case 'Jun':
                    month='06';
                    break;
                case 'Jul':
                    month='07';
                    break;
                case 'Aug':
                    month='08';
                    break;
                case 'Sep':
                    month='09';
                    break;
                case 'Oct':
                    month='10';
                    break;
                case 'Nov':
                    month='11';
                    break;
                case 'Dec':
                    month='12';
                    break;

            }
            return month;
        }
								//console.log('len : ');			
								return {
									"evts": arrRec
								}
						}
					}
				});
					
				//Ext.calendar.data.Events.getData();
			}
		
		});
	}
	catch(err)
	{
		document.getElementById("om").innerHTML+="<br/>"+err;
	}













	