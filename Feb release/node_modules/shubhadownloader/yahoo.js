/*****************************
 *
 *Author:PRASHANT SHILIMKAR
 *COMPANY NAME XNet Inc,Pune.
 *last modified date:08-jan-2013
 *
 *
 *
 *Description:
 *
 *
 *variables :
 *baseurl-->it contians all url for nse equity
 *downloadpath---> it contain download path of file for processing
 *unzippath  ----> it contains unzip folder path
 *outputpah  ----> it containds output older path
 *
 *
 *copyright 2013
 ******************************/
/********************************
	<Shubha Downloader, It downloads end of day pricing data from publicly available sites and converts it different formats....>
    Copyright (C) 2013 Shubhalabha.in

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>
***********************************/


function process_yahooeod(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn)
{
    var url = require('url');
    var async = require('async');
    var http = require('http'),fs = require('fs'),AdmZip = require('adm-zip'),request = require('request');
    var csv = require('ya-csv');
    var datefrom=fromd;//document.getElementById("datefield-1029-inputEl").value;
    var dateto=tod;//document.getElementById("datefield-1031-inputEl").value;


    async.parallel({

        data1 : function(callback){
            if (fs.existsSync('yahoo.csv')) {
                fs.readFile('yahoo.csv','utf-8', function(err, data){
                    if(err){
                        document.getElementById("om").innerHTML+="<br/>"+err;
                    }
                    // console.log('\n Reading HL.csv');
                    callback(err, data);
                });
            }else
            {
                // Here readdir's functionaliity has no use. It is written for only to send
                // '0' data in its callback function because we cannot call "callback(err, data);"
                // function out side a callback function
                fs.readdir(downloadpath, function(err, files){
                    if(err){
                        document.getElementById("om").innerHTML+="<br/>"+err;
                    }
                    callback(err,'0');
                });
            }
        }

    }, function(err, result)
    {

        if(err){
            document.getElementById("om").innerHTML+="<br/>"+err;
        }
        if (fs.existsSync('yahoo.csv'))
        {
            var arrRow = new Array();
            arrRow = result['data1'].split('\n');
            if(arrRow.length>0)
            {
                var arrFileData = new Array();

                for(var i=0 ; i<arrRow.length-1;i++)
                {
                    var tempArr = arrRow[i].split(',');
                    arrFileData.push(tempArr);
                                      
                }
                                  
                var tempPath = downloadpath+'temp_yahoo/';
                if(arrFileData.length > 0)
                {
                    downloadAndProcessYahoo(arrFileData, 0, datefrom, dateto,tempPath, outputpath);
                }else
                {
                    document.getElementById("om").innerHTML+="<br/><font color=lightcoral>Please add yahoo symbols to download yahoo data</font>";
					sn++;
                    callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);
                }
            }
            else
            {
                document.getElementById("om").innerHTML+="<br/><font color=lightcoral>Please add yahoo symbols to download yahoo data</font>";
				sn++;
                callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);
            }

        }
		else
                  {
                      document.getElementById("om").innerHTML+="<br/><font color=lightcoral>Please add yahoo symbols to download yahoo data</font>";
					  sn++;
                      callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);
                  }
    })




    function downloadAndProcessYahoo(arrSymbol, n, stDateFormate, endDateFormate, tempPath, outputpath)
    {
        //console.log('\n'+stDateFormate);
        var stmonth = parseInt(stDateFormate.split('/')[0].toString()) - 1 ;
        if(stmonth < 10)
            stmonth = '0'+stmonth;
        var stdate = parseInt(stDateFormate.split('/')[1].toString());
        if(stdate < 10)
            stdate = '0'+stdate;
        var endmonth = parseInt(endDateFormate.split('/')[0].toString()) - 1 ;
        if(endmonth < 10)
            endmonth = '0'+endmonth;
        var enddate = parseInt(endDateFormate.split('/')[1].toString());
        if(enddate < 10)
            enddate = '0'+enddate;
        // console.log('data---->'+arrSymbol[n].toString().trim());
        var urlStockinfo = 'http://ichart.yahoo.com/table.csv?s='+arrSymbol[n][0].toString().trim()+'&a='+stmonth+'&b='+stdate+'&c='+stDateFormate.split('/')[2].toString()+'&d='+endmonth+'&e='+enddate+'&f='+endDateFormate.split('/')[2].toString()+'&g=d&ignore=.csv';
        //'http://ichart.finance.yahoo.com/table.csv?s='+arrSymbol[n]+'&a='+stmonth+'&b='+stdate+'&c='+stDateFormate.split('/')[2].toString()+'&d='+endmonth+'&e='+enddate+'&f='+endDateFormate.split('/')[2].toString()+'&g=d&ignore=.csv';
        //console.log('\nurl> '+urlStockinfo);
        var fileName = tempPath+"temp_"+arrSymbol[n][0].toString().trim()+".csv";
        var fname = "temp_"+arrSymbol[n][0]+".csv";

        request
        (
        {
            method: 'GET',
            uri: urlStockinfo,
            headers:
            {
                "User-Agent": "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.97 Safari/537.11",
                "Referer": "http://ichart.yahoo.com/table.csv?s=",
                "Accept-Encoding": "csv",
                "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                "Cookie": "cookie"
            }
        },
        function(error, response, body)
        {
            if(response != null)
            {
                if(response.statusCode != null || response.statusCode != "")
                {
                    if (!error && response.statusCode == 200)
                    {
                        downloadIndexData(200, urlStockinfo, fileName, fname, arrSymbol ,n, stDateFormate, endDateFormate, tempPath, outputpath);
                    }
                    else
                    {
                        downloadIndexData(404, urlStockinfo, fileName, fname, arrSymbol, n, stDateFormate, endDateFormate, tempPath, outputpath);
                    }
                }else
                {
                    downloadIndexData(404, urlStockinfo, fileName, fname, arrSymbol, n, stDateFormate, endDateFormate, tempPath, outputpath);
                }
            }else
            {
                downloadIndexData(404, urlStockinfo, fileName, fname, arrSymbol, n, stDateFormate, endDateFormate, tempPath, outputpath);
            }
        });
    }


    function downloadIndexData(statuscode, urlStockinfo, fileName, fname, ind, n, stDateFormate, endDateFormate, tempPath, outputpath)
    {
        if(statuscode == 200)
        {

            var fs=require('fs')
            var out = fs.createWriteStream(fileName); // For saving NSE Equity bhavcopy
            var req = request(
            {
                method: 'GET',
                uri: urlStockinfo,
                headers:
                {
                    "User-Agent": "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.97 Safari/537.11",
                    "Referer": "http://ichart.yahoo.com/table.csv?s=",
                    "Accept-Encoding": "csv",
                    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                    "Cookie": "cookie"
                }
            });

            req.on('error',function()
            {
                document.getElementById("om").innerHTML+='<br/>Error occured in downloading '+fname;
                downloadAndProcessYahoo(ind, n, stDateFormate, endDateFormate, tempPath);

            });

            req.pipe(out);   //request pipeout
            req.on('end', function()
            {
                Ext.getCmp('pbar3').updateText(fileName.split("/")[fileName.split("/").length-1]+' downloaded...');
                document.getElementById("om").innerHTML+="<br/>"+fileName.split('/')[fileName.split('/').length-1]+" downloaded...";
                // console.log('filename'+fileName);
                /* var zip = new AdmZip(fileName);
                        zip.extractAllTo('c:/data/', /*overwrite*\/true);
			document.getElementById("om").innerHTML+='<br>'+fname+' is extracted...';*/
                stpro();
            });
            function stpro(){

                var async = require('async');
                async.parallel(
                {
                    data1 : function(callback){
                        if (fs.existsSync(fileName)) {
                            fs.readFile(fileName,'utf-8', function(err, data){
                                if(err){
                                    document.getElementById("om").innerHTML+="<br/>"+err;
                                }
                                //console.log('\n Reading '+fname);
                                callback(err, data);
                            });
                        }else
                        {
                            // Here readdir's functionaliity has no use. It is written for only to send
                            // '0' data in its callback function because we cannot call "callback(err, data);"
                            // function out side a callback function
                            fs.readdir(outputpath, function(err, files){
                                if(err){
                                    document.getElementById("om").innerHTML+="<br/>"+err;
                                }
                                callback(err,'0');
                            });
                        }
                    }
                }, function(err, result)
                {
                    var sym=ind[n][0],name=ind[n][1];
                    if(err){
                        document.getElementById("om").innerHTML+="<br/>"+err;
                    }

                    if (fs.existsSync(fileName))
                    {
                        //console.log('\nFile exist');

                        var arrRow = new Array();
                        arrRow = result['data1'].split('\n');
                        var arrFileData = new Array();

                        // arrRow.lenght-3 is for last 3 lines of no use in file

                        for(var i=1 ; i<arrRow.length;i++)
                        {
                            var tempArr = arrRow[i].split(',');
                            arrFileData.push(tempArr);
                        }

                        //outputpath=outputpath.replace(/bse/g,'yahoo/eod');
                        var output_filename = outputpath+'yahoo_eod.csv';
                        if(fs.existsSync(output_filename))
                        {

                            //console.log('\nwriting');
                            /*var today = new Date();
                                                        var dd = today.getDate();
                                                        var mm = today.getMonth()+1; //January is 0!
                                                        var yyyy = today.getFullYear();
                                                        if(dd<10){dd='0'+dd} if(mm<10){mm='0'+mm}
                                                        today = yyyy+mm+dd;*/
							
                            for(i=0;i <arrFileData.length-1;i++)
                            {
                                var arrYeodDate = arrFileData[i][0].split('-');
                                fs.appendFileSync(output_filename, sym+','+name+','+arrYeodDate[0]+arrYeodDate[1]+arrYeodDate[2]+','+arrFileData[i][1]+','+arrFileData[i][2]+','+arrFileData[i][3]+','+arrFileData[i][4]+','+arrFileData[i][5]+','+'0'+'\n','utf-8',  function(err){
                                    if(err) throw err;
                                });

                            }


                        }
                        else
                        {
                            // console.log('\nFileoutput '+output_filename);
                            var header='TICKER,NAME,DATE,OPEN,HIGH,LOW,CLOSE,VOLUME,OPENINT';


                            fs.writeFile(output_filename, header+'\n', function (err)
                            {
                                //console.log('\nwriting');
                                /*var today = new Date();
                                                        var dd = today.getDate();
                                                        var mm = today.getMonth()+1; //January is 0!
                                                        var yyyy = today.getFullYear();
                                                        if(dd<10){dd='0'+dd} if(mm<10){mm='0'+mm}
                                                        today = yyyy+mm+dd;*/
							
								
                                for(i=0;i <arrFileData.length-1;i++)
                                {
                                    var arrYeodDate = arrFileData[i][0].split('-');
							
                                    fs.appendFileSync(output_filename, sym+','+name+','+arrYeodDate[0]+arrYeodDate[1]+arrYeodDate[2]+','+arrFileData[i][1]+','+arrFileData[i][2]+','+arrFileData[i][3]+','+arrFileData[i][4]+','+arrFileData[i][5]+','+'0'+'\n','utf-8',  function(err){
                                        if(err) throw err;
                                    });

                                }

                            });
                        }
                    }
                    Ext.getCmp('pbar3').updateText('Processing yahoo_eod.csv completed');
                    document.getElementById("om").innerHTML+='<br/>Processing yahoo_eod.csv completed';
                    n++;
                    if(ind.length>n)
                    {
                        loadprogressbar();
                        setTimeout(function (){
                            downloadAndProcessYahoo(ind, n, stDateFormate, endDateFormate, tempPath, outputpath);
                        },1000);

                    }else
                    {
                        //document.getElementById("om").innerHTML+='<br/><font color=green> Finished </font>';

                        /************/
                        visit('yahooeod.html');
                        /***************/
                        sn++;
                        callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);
                    }
                });		// parallel
            }
        //}); //on end

        }
        else
        {
            document.getElementById("om").innerHTML+='<br/><font color=red>'+fname+' is not present on server</font>';
            n++;
            if(ind.length>n)
            {
                loadprogressbar();
                setTimeout(function (){
                    downloadAndProcessYahoo(ind, n, stDateFormate, endDateFormate, tempPath, outputpath);
                },1000);
            }else
            {
                //document.getElementById("om").innerHTML+='<br/><font color=green> Finished </font>';
                sn++;
                callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);
            }
        }

            }
//sn++;
//callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);
}

function getDate(date)
{
    if(parseInt(date) < 10)
    {
        var strDate = '0'+date;

        return strDate;
    }

    return date;
}

function getMonth(mon){
    switch(mon)
    {
        case 'January':
            mon='01';
            break;
        case 'February':
            mon='02';
            break;
        case 'March':
            mon='03';
            break;
        case 'April':
            mon='04';
            break;
        case 'May':
            mon='5';
            break;
        case 'June':
            mon='06';
            break;
        case 'July':
            mon='07';
            break;
        case 'August':
            mon='08';
            break;
        case 'September':
            mon='09';
            break;
        case 'October':
            mon='10';
            break;
        case 'November':
            mon='11';
            break;
        case 'December':
            mon='12';
            break;

    }
    return mon;
}
