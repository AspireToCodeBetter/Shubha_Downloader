/*****************************
 *
 *Author:JAYANT PATIL
 *COMPANY NAME XNet Inc,Pune.
 *last modified date:04-jan-2013
 *
 *
 *
 *Description:
 *This will process MCX EOD comodity file and generate output file
 *
 *variables :
 *count --->contains array of date in which we take one date process files regarding to that
 *n     --->it is a counter variable
 *baseurl-->it contians all url for nse equity
 *downloadpath---> it contain download path of file for processing
 *unzippath  ----> it contains unzip folder path
 *outputpah  ----> it containds output older path
 *
 *
 *copyright 2013
 ******************************/
/********************************
	<Shubha Downloader, It downloads end of day pricing data from publicly available sites and converts it different formats....>
    Copyright (C) 2013 Shubhalabha.in

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>
***********************************/


function process_mcxspotindex(count,n,baseurl,downloadpath,unzippath,outputpath,logpath)
{

    //document.getElementById("om").innerHTML+="loading";
    /*var mon=count[n].split('-')[0];
var m=count[n].split('-')[1];
var d=count[n].split('-')[2];
var yy=count[n].split('-')[3];
var y=yy.substr(2,2);*/
    //import files from modules
    var fs = require('fs');
    var csv = require('ya-csv');
    var async = require('async');
    //var path = require('./node_modules/path');

    //var writeFileStream = fs.createWriteStream('./tempData/output.txt',{flag:'a',encoding:'utf-8'});


    try{
        async.parallel({
            data1 : function(callback){
                if (fs.existsSync(downloadpath+'mcxindia/MCXSpotIndex'+n+'.csv')) {
                    fs.readFile(downloadpath+'mcxindia/MCXSpotIndex'+n+'.csv','utf-8', function(err, data){
                        if(err){
                            document.getElementById("om").innerHTML+="<br/>"+err;
                        }
                        //console.log('\n Reading fo.csv');
                        callback(err, data);
                    });
                }else
                {
                    // Here readdir's functionaliity has no use. It is written for only to send
                    // '0' data in its callback function because we cannot call "callback(err, data);"
                    // function out side a callback function
                    fs.readdir(downloadpath, function(err, files){
                        if(err){
                            document.getElementById("om").innerHTML+="<br/>"+err;
                        }
                        callback(err,'0');
                    });
                }
            }

        }, function(err, result){

            if(err){
                document.getElementById("om").innerHTML+="<br/>"+err;
            }
            //        console.log(downloadpath+'mcxindia/MCXIndex'+n+'.csv');
            if (fs.existsSync(downloadpath+'mcxindia/MCXSpotIndex'+n+'.csv')) {

                var arrRow = new Array();
                arrRow = result['data1'].split('\n');

                var arrFileData = new Array();

                // arrRow.lenght-3 is for last 3 lines of no use in file
                for(var i=2 ; i<arrRow.length-1;i++)
                {
                    var tempArr = arrRow[i].split(',');
                    arrFileData.push(tempArr);
                }


                // add blank space where cell of company name col not have value
                /*    for(i=0; i<arrFileData.length; i++)
        {
                if(arrFileData[i][12] == null || arrFileData[i][12] == "")
                {
                    arrFileData[i][12] = '';
                }
        }
*/
                var outputpath1=outputpath;
        

                var filename = outputpath1+'MCX_Indices_MCXSpotIndex.csv';
                if(fs.existsSync(filename))
                {
                    for(i=1;i<arrFileData.length;i++)
                    {
                            fs.appendFileSync(filename,getname(n)+','+getname(n)+','+getcorrect(arrFileData[i][0])+','+arrFileData[i][1]+',0,0,'+arrFileData[i][2]+',0,0'+'\n','UTF-8', function (err) {
                            if(err){
                                document.getElementById("om").innerHTML+="<br/>"+err;
                            }
                        // console.log('| Appended to file!');
                        });
                    }// for

                }
                else
                {
                    var header='TICKER,NAME,DATE,OPEN,HIGH,LOW,CLOSE,VOLUME,OPENINT';
                    //if(!fs.existsSync(filename)){
                       fs.appendFileSync(filename, header+'\n','UTF-8', function (err)
                        {
                            if(err){
                                document.getElementById("om").innerHTML+="<br/>"+err;
                            }
                            //console.log(err);
                            // console.log(filename);
                            //processing actual file data

                            //var date ='20130107';
                            // Writing data to output file

                            for(i=1;i<arrFileData.length;i++)
                            {
                                fs.appendFileSync(filename,getname(n)+','+getname(n)+','+getcorrect(arrFileData[i][0])+','+arrFileData[i][1]+',0,0,'+arrFileData[i][2]+',0,0'+'\n','UTF-8', function (err) {
                                    if(err){
                                        document.getElementById("om").innerHTML+="<br/>"+err;
                                    }
                                // console.log('| Appended to file!');
                                });
                            }// for

                        });
                    
                }
            

            /************/
            visit('indices.html');
        /***************/
           
        }
        });

}
catch(err){
    console.log(err.stack);
    document.getElementById("om").innerHTML+="<br/>"+err;
}


function monthDiff(d1, d2) {
    var months;
    months = (d2.getFullYear() - d1.getFullYear()) * 12;
    months -= d1.getMonth() + 1;
    months += d2.getMonth();
    return months+1;
}
function getcorrect(xx){
            
    var dt=xx.split('/')[2]+xx.split('/')[0]+xx.split('/')[1];
    return dt;
}
function getname(n){

    var name;
    switch(n)
    {
        case 327:
            name='scomdex';
            break;
        case 328:
            name='smetal';
            break;
        case 329:
            name='senergy';
            break;
        case 330:
            name='sagri';
            break;

    }
    return name;
}
        
}