/*****************************
 *
 *Author:Prashant Shilimkar
 *COMPANY NAME XNet Inc,Pune.
 *last modified date:01-jan-2013
 *
 *
 *
 *Description:
 *
 *
 *variables :
 *count --->contains array of date in which we take one date process files regarding to that
 *n     --->it is a counter variable
 *baseurl-->it contians all url for nse equity
 *downloadpath---> it contain download path of file for processing
 *unzippath  ----> it contains unzip folder path
 *outputpah  ----> it containds output older path
 *
 *
 *copyright 2013
 ******************************/
/********************************
	Shubha Downloader, It downloads end of day pricing data from publicly available sites and converts it different formats....>
    Copyright (C) 2013 Shubhalabha.in

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/
***********************************/


function process_ncdex(count,n,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn)
{
try{
var mon=count[n].split('-')[0];
var m=count[n].split('-')[1];
var d=count[n].split('-')[2];
var yy=count[n].split('-')[3];
var y=yy.substr(2,2);

var fs = require('fs');
    var csv = require('ya-csv');
    var async = require('async');

	var tempPath = downloadpath+'temp/';
	
    //var writeFileStream = fs.createWriteStream('./tempData/output.txt',{flag:'a',encoding:'utf-8'});
	
	var urlStockinfo = 'http://www.ncdex.com/Downloads/Bhavcopy_Summary_File/Export_csv/'+m+'-'+d+'-'+yy+'.csv';
    var fileName = tempPath+m+'-'+d+'-'+yy+".csv";
	var fname = m+'-'+d+'-'+yy+".csv";
	//console.log('\nurl = '+urlStockinfo);
	//console.log('\nurl= '+urlStockinfo);
	
	request
	(
		{
            method: 'GET',
            uri: urlStockinfo,
            headers: {"User-Agent": "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.97 Safari/537.11",
                     
                     "Accept-Encoding": "gzip,deflate,sdch",
                     "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                     "Cookie": "cookie"
                 }
        },
        function(error, response, body) 
		{
			if(response != null)
			{
				if(response.statusCode != null || response.statusCode != "")
				{
					if (!error && response.statusCode == 200)
					{
						Ext.getCmp('pbar3').updateText('Downloading '+fname);
						downloadNcdex(200, urlStockinfo, fileName, fname, n,tempPath, outputpath, count, baseurl,downloadpath,unzippath, m, d, yy,logpath,fromd,tod,sn);
					}
					else
					{
						downloadNcdex(404, urlStockinfo, fileName, fname,  n, tempPath, outputpath, count, baseurl,downloadpath,unzippath, m, d, yy,logpath,fromd,tod,sn);
					}
				}else
				{
					downloadNcdex(404, urlStockinfo, fileName, fname,  n,  tempPath, outputpath, count, baseurl,downloadpath,unzippath, m, d, yy,logpath,fromd,tod,sn);
				}
			}else
			{
				downloadNcdex(404, urlStockinfo, fileName, fname,  n,  tempPath, outputpath, count, baseurl,downloadpath,unzippath, m, d, yy,logpath,fromd,tod,sn);

			}
		}
    );
	

	
function downloadNcdex(statuscode, urlStockinfo, fileName, fname, n, tempPath, outputpath, count, baseurl,downloadpath,unzippath, m, d, yy,logpath,fromd,tod,sn)
 {
 try{
	var fs = require('fs');
    var csv = require('ya-csv');
    var async = require('async');

if(statuscode==200)
	{
		Ext.getCmp('pbar3').updateText('Downloading '+fname);
		var out = fs.createWriteStream(fileName); // For saving NSE Equity bhavcopy
		var req = request(
		{
			method: 'GET',
			uri: urlStockinfo,
			headers: 
			{
					"User-Agent": "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.97 Safari/537.11",
                     "Accept-Encoding": "gzip,deflate,sdch",
                     "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                     "Cookie": "cookie"
			}
		});
	
		req.on('error',function()
		{
			Ext.getCmp('pbar3').updateText('Error occured in downloading '+fname);
			document.getElementById("om").innerHTML+='<br/>Error occured in downloading '+fname;
                        addlog(logpath, 'Error occured in downloading '+fname);
			process_ncdex(count,n,baseurl,downloadpath,unzippath,outputpath);
			
		});
	
		req.pipe(out);   //request pipeout
		req.on('end', function()
		{
			Ext.getCmp('pbar3').updateText('Downloading '+fname+' completed');
			
			document.getElementById("om").innerHTML+='<br>NCDEXfno'+fname+' is downloaded...';
                       // addlog(logpath, 'NCDEXfno'+fname+' is downloaded');
			var async = require('async');
			async.parallel(
			{
               data1 : function(callback){
                    if (fs.existsSync(fileName)) {
						Ext.getCmp('pbar3').updateText('Processing '+fname);
                        fs.readFile(fileName,'utf-8', function(err, data){
						if(err){document.getElementById("om").innerHTML+="<br/>"+err;}
                        //console.log('\n Reading '+fname);
                        callback(err, data);
                    });
                    }else
                    {
                        // Here readdir's functionaliity has no use. It is written for only to send
                        // '0' data in its callback function because we cannot call "callback(err, data);"
                        // function out side a callback function
                        fs.readdir(downloadpath, function(err, files){
						if(err){document.getElementById("om").innerHTML+="<br/>"+err;}
                            callback(err,'0');
                        });
                    }
               }
			}, function(err, result)
			{
			if(err){document.getElementById("om").innerHTML+="<br/>"+err;}
       
			
			if (fs.existsSync(fileName)) {   
				Ext.getCmp('pbar3').updateText('Processing '+fname);
            var arrRow = new Array();
            arrRow = result['data1'].split('\n');
                            
            var arrFileData = new Array();
            
            // arrRow.lenght-3 is for last 3 lines of no use in file
            for(var i=0 ; i<arrRow.length;i++)
            {
                    
					arrRow[i]=arrRow[i].toString().replace(/"/g, '').trim();
					//arrRow[i]=arrRow[i].toString().replace(/\//g, '').trim();
					arrRow[i]=arrRow[i].toString().replace(/NA/g, '0').trim();
					var tempArr = arrRow[i].split(',');
                    arrFileData.push(tempArr);
            }
			
			
            var header='TICKER,NAME,DATE,OPEN,HIGH,LOW,CLOSE,VOLUME,OPENINT';
		var	outputpath1=outputpath;
            var output_path = outputpath1+'NCDEX_Market_NCDEXfno'+m+''+d+''+yy+'.csv';
			//console.log('\nop >'+output_path);
            if(!fs.existsSync(output_path)){
            fs.writeFile(output_path, header+'\n', function (err)
            {
               if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
				
				var dates = new Array();
            
				for(var i=1;i<arrFileData.length-1;i++)
				{
					//console.log('\n>>>'+arrFileData[i][1]);
				//console.log('\n date>'+new Date(arrFileData[i][1].replace(/"/g,'')));
                                        if(typeof arrFileData[i][1]!=="undefined" && arrFileData[i][1]!=="" && arrFileData[i][1]!==null && arrFileData[i][1]!= "\"N/A\"" && arrFileData[i][1]!= "N/A" && arrFileData[i][1]!= "NaN" && arrFileData[i][1]!= "undefined")
                                            dates.push(new Date(arrFileData[i][1].replace(/"/g,'').split('/')[2],arrFileData[i][1].replace(/"/g,'').split('/')[1]-1,arrFileData[i][1].replace(/"/g,'').split('/')[0]));
				}
				//console.log('\nlen='+dates.length);
				function sortDates(a, b)
				{
					return a.getTime() - b.getTime();
				}
				
				var sorted = dates.sort(sortDates);
				var m2=sorted[1].getMonth()+1;
				var d2=sorted[1].getFullYear()+'/'+m2+'/'+sorted[1].getDate();
				//console.log('\nmin='+sorted[0]);
				for(var i=0; i<sorted.length; i++)
				{
				//console.log('\nExpirydate>'+sorted[i].getFullYear()+'-'+sorted[i].getMonth()+'-'+sorted[i].getDate());
				}	
				for(var i=1 ; i<arrFileData.length-1;i++)
				{
					//console.log('\ni='+i);
						var arrDate = arrFileData[i][1].split('/');
						var strDate = arrDate[2].toString().concat(arrDate[0].toString());
						var strTempname = arrFileData[i][2];
						var strTempExt = arrFileData[i][3];
						var strName = strTempname.trim()+strTempExt.trim()+strDate;
						
						  var date1 = new Date(d2);
							
					var date2 = new Date(arrFileData[i][1].replace(/"/g,'').split('/')[2]+'/'+arrFileData[i][1].replace(/"/g,'').split('/')[0]+'/'+arrFileData[i][1].replace(/"/g,'').split('/')[1]);
					//var date2 = new Date(arrFileData[i][1].split('/')[2]+'/'+arrFileData[i][1].split('/')[1]+'/'+arrFileData[i][1].split('/')[0]);
					var m1=monthDiff(date1,date2);
					//console.log('\ndate1 > '+date1);
					//console.log('\ndate2 > '+date2);
					if(m1==0)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-I'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==1)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-II'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==2)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-III'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==3)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-IV'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==4)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-V'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==5)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-VI'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==6)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-VII'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==7)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-VIII'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==8)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-IX'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==9)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-X'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==10)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-XI'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
					}
					if(m1==11)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-XII'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
						
					}
					if(m1==12)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-XIII'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
						
					}	
					if(m1==13)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-XIV'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
						
					}
					if(m1==14)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-XV'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
						
					}
					if(m==15)
					{
					fs.appendFileSync(output_path, arrFileData[i][0].toString().trim()+'-XVI'+','+strName.replace(/"/g,'').replace(/\s/g, '')+','+arrFileData[i][15].toString().replace(/NOTRADE/g, '0').trim()+','+arrFileData[i][6]+','+arrFileData[i][7]+','+arrFileData[i][8]+','+arrFileData[i][9]+','+arrFileData[i][10]+','+arrFileData[i][14]+'\n','utf-8', function (err) {
						if(err){document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;}
							
					});
						
					}
				}
            });
            }
			
   } 
			
						
						Ext.getCmp('pbar3').updateText('Processing '+fname+' completed');
                               document.getElementById("om").innerHTML+='<br>NCDEXfno'+fname+' is processed...';
				n++;
				if(count.length>n)
				{
					loadprogressbar();
                                        setTimeout(function(){process_ncdex(count,n,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);},1000);
				}else
				{
                                    Ext.getCmp('pbar3').updateProgress(0);
                                    /************/
                                    visit('ncdex.html');
                                    /***************/
                                    sn++;
                                    callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);
                                }
			});		// parallel	
		
		}); //on end
		
	}
	else
	{
		document.getElementById("om").innerHTML+='<br/><font color=red>'+fname+' is not present on server</font>';
                addlog(logpath, fname+' is not present on server');
		n++;
		if(count.length>n)
		{
			loadprogressbar();
                        setTimeout(function(){process_ncdex(count,n,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);},1000);
		}else
		{
			Ext.getCmp('pbar3').updateProgress(0);
/************/
visit('ncdex.html');
/***************/
sn++;
callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);
		}	
	}
}catch(err)
{
document.getElementById("om").innerHTML+="<br/>An error occured while processing "+fname;
	n++;
		if(count.length>n)
		{
			loadprogressbar();
                        setTimeout(function(){process_ncdex(count,n,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);},1000);
		}else
		{
			Ext.getCmp('pbar3').updateProgress(0);
/************/
visit('ncdex.html');
/***************/
sn++;
callfun(count,baseurl,downloadpath,unzippath,outputpath,logpath,fromd,tod,sn);
		}	

}
	
}	
}catch(err)
{
	console.log(err);
}

}




function monthDiff(d1, d2) {
	try
	{
		var months;
		months = (d2.getFullYear() - d1.getFullYear()) * 12;
		months -= d1.getMonth() + 1;
		months += d2.getMonth();
	   return months+1;
	}catch(err)
	{
		console.log(err);
	}
}


